// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component generic tests: When component has one test with no element to return 1`] = `
.c14 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 16px;
  height: 16px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c14 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c8 {
  display: block;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  background: #f0f0f0;
  border-radius: 4px 4px 0 0;
  color: #000;
  padding: 0 16px;
}

.styleguide-sandbox .c9:only-child {
  border-radius: 4px;
}

.c11 {
  margin: 0;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  font-size: 16px;
  font-weight: 300;
  font-family: sans-serif;
  padding: 16px 0;
  word-break: break-word;
}

.c12 {
  margin-left: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #202020;
  opacity: 0.5;
  -webkit-transition: opacity 0.1s ease;
  transition: opacity 0.1s ease;
  padding: 0 8px;
}

.c13:hover {
  opacity: 1;
}

.c15 {
  position: relative;
  padding: 20px;
  border: 1px solid #f0f0f0;
  border-top: 0;
  box-shadow: 0 -1px 0 0 #f0f0f0;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
}

.c0 {
  padding-top: 32px;
}

.c1 {
  margin: 0 16px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c2 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c6 {
  margin-top: 16px;
}

.c3 {
  font-size: 14px;
  font-family: sans-serif;
  padding: 0 16px;
}

.c3 table {
  width: 100%;
  border-collapse: collapse;
  border-radius: 4px;
  text-align: left;
}

.c3 thead tr {
  border-bottom: 1px solid #7000e3;
}

.c3 thead th {
  padding: 0 16px 8px 4px;
}

.c3 tbody tr:nth-child(2n) {
  background: #f0f0f0;
}

.c3 tbody tr td:nth-child(2) {
  font-style: italic;
  color: #303030;
}

.c3 tbody tr td:nth-child(1) {
  font-weight: 600;
}

.c3 tbody tr td:nth-child(4) {
  width: 45%;
}

.c3 td {
  padding: 8px 16px 8px 4px;
}

.c4 + .styleguide-component__props-data {
  margin-top: 16px;
}

.c5 {
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: sans-serif;
}

.c5::before {
  margin-right: 4px;
  display: block;
  background: #7000e3;
  color: #fff;
  width: 14px;
  height: 14px;
  line-height: 12px;
  text-align: center;
}

.c5::before {
  content: '+';
}

.c7 + .c7 {
  margin-top: 32px;
}

@media screen and (max-width:376px) {
  .c11 {
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: initial;
  }
}

@media screen and (max-width:376px) {
  .c0 {
    padding-top: 16px;
  }
}

@media screen and (min-width:768px) {
  .c1 {
    margin: 0 0 8px 0;
  }
}

@media screen and (min-width:768px) {
  .c3 {
    padding: 0;
  }
}

<article
  className="c0"
  data-id="component"
>
  <header
    className="styleguide-component__header"
  >
    <h1
      className="c1"
    >
      Component
    </h1>
    <div
      className="c2"
    >
      description of component
    </div>
  </header>
  <div
    className="c3"
  >
    <div
      className="c4"
    >
      <span
        className="c5"
        onClick={[Function]}
        role="button"
      >
        PROPERTIES
      </span>
    </div>
  </div>
  <div
    className="c6"
  >
    <div
      className="c7 "
    >
      <section
        className="c8"
        data-name="testEmpty"
        data-vrt-locator="sandbox"
      >
        <header
          className="c9 c10"
        >
          <h1
            className="c11"
            onClick={[Function]}
            title="testEmpty"
          >
            testEmpty
          </h1>
          <div
            className="c12"
          >
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                  />
                </svg>
              </div>
            </span>
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                  />
                </svg>
              </div>
            </span>
          </div>
        </header>
        <div
          data-vrt-locator="sandbox-content"
        >
          <div
            className="c15"
          >
            Test testEmpty is not defined
          </div>
        </div>
      </section>
    </div>
  </div>
</article>
`;

exports[`Component generic tests: When component has one test with no valid react element to return 1`] = `
.c14 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 16px;
  height: 16px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c14 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c8 {
  display: block;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  background: #f0f0f0;
  border-radius: 4px 4px 0 0;
  color: #000;
  padding: 0 16px;
}

.styleguide-sandbox .c9:only-child {
  border-radius: 4px;
}

.c11 {
  margin: 0;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  font-size: 16px;
  font-weight: 300;
  font-family: sans-serif;
  padding: 16px 0;
  word-break: break-word;
}

.c12 {
  margin-left: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #202020;
  opacity: 0.5;
  -webkit-transition: opacity 0.1s ease;
  transition: opacity 0.1s ease;
  padding: 0 8px;
}

.c13:hover {
  opacity: 1;
}

.c15 {
  position: relative;
  padding: 20px;
  border: 1px solid #f0f0f0;
  border-top: 0;
  box-shadow: 0 -1px 0 0 #f0f0f0;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
}

.c0 {
  padding-top: 32px;
}

.c1 {
  margin: 0 16px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c2 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c6 {
  margin-top: 16px;
}

.c3 {
  font-size: 14px;
  font-family: sans-serif;
  padding: 0 16px;
}

.c3 table {
  width: 100%;
  border-collapse: collapse;
  border-radius: 4px;
  text-align: left;
}

.c3 thead tr {
  border-bottom: 1px solid #7000e3;
}

.c3 thead th {
  padding: 0 16px 8px 4px;
}

.c3 tbody tr:nth-child(2n) {
  background: #f0f0f0;
}

.c3 tbody tr td:nth-child(2) {
  font-style: italic;
  color: #303030;
}

.c3 tbody tr td:nth-child(1) {
  font-weight: 600;
}

.c3 tbody tr td:nth-child(4) {
  width: 45%;
}

.c3 td {
  padding: 8px 16px 8px 4px;
}

.c4 + .styleguide-component__props-data {
  margin-top: 16px;
}

.c5 {
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: sans-serif;
}

.c5::before {
  margin-right: 4px;
  display: block;
  background: #7000e3;
  color: #fff;
  width: 14px;
  height: 14px;
  line-height: 12px;
  text-align: center;
}

.c5::before {
  content: '+';
}

.c7 + .c7 {
  margin-top: 32px;
}

@media screen and (max-width:376px) {
  .c11 {
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: initial;
  }
}

@media screen and (max-width:376px) {
  .c0 {
    padding-top: 16px;
  }
}

@media screen and (min-width:768px) {
  .c1 {
    margin: 0 0 8px 0;
  }
}

@media screen and (min-width:768px) {
  .c3 {
    padding: 0;
  }
}

<article
  className="c0"
  data-id="component"
>
  <header
    className="styleguide-component__header"
  >
    <h1
      className="c1"
    >
      Component
    </h1>
    <div
      className="c2"
    >
      description of component
    </div>
  </header>
  <div
    className="c3"
  >
    <div
      className="c4"
    >
      <span
        className="c5"
        onClick={[Function]}
        role="button"
      >
        PROPERTIES
      </span>
    </div>
  </div>
  <div
    className="c6"
  >
    <div
      className="c7 "
    >
      <section
        className="c8"
        data-name="TestWithWrongComponent"
        data-vrt-locator="sandbox"
      >
        <header
          className="c9 c10"
        >
          <h1
            className="c11"
            onClick={[Function]}
            title="TestWithWrongComponent"
          >
            TestWithWrongComponent
          </h1>
          <div
            className="c12"
          >
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                  />
                </svg>
              </div>
            </span>
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                  />
                </svg>
              </div>
            </span>
          </div>
        </header>
        <div
          data-vrt-locator="sandbox-content"
        >
          <div
            className="c15"
          >
            <false />
          </div>
        </div>
      </section>
    </div>
  </div>
</article>
`;

exports[`Component generic tests: When component has only props - show props table 1`] = `
.c0 {
  padding-top: 32px;
}

.c1 {
  margin: 0 16px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c2 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c3 {
  font-size: 14px;
  font-family: sans-serif;
  padding: 0 16px;
}

.c3 table {
  width: 100%;
  border-collapse: collapse;
  border-radius: 4px;
  text-align: left;
}

.c3 thead tr {
  border-bottom: 1px solid #7000e3;
}

.c3 thead th {
  padding: 0 16px 8px 4px;
}

.c3 tbody tr:nth-child(2n) {
  background: #f0f0f0;
}

.c3 tbody tr td:nth-child(2) {
  font-style: italic;
  color: #303030;
}

.c3 tbody tr td:nth-child(1) {
  font-weight: 600;
}

.c3 tbody tr td:nth-child(4) {
  width: 45%;
}

.c3 td {
  padding: 8px 16px 8px 4px;
}

.c4 + .styleguide-component__props-data {
  margin-top: 16px;
}

.c5 {
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: sans-serif;
}

.c5::before {
  margin-right: 4px;
  display: block;
  background: #7000e3;
  color: #fff;
  width: 14px;
  height: 14px;
  line-height: 12px;
  text-align: center;
}

.c5::before {
  content: '–';
}

.c6 {
  margin-bottom: 32px;
}

@media screen and (max-width:376px) {
  .c0 {
    padding-top: 16px;
  }
}

@media screen and (min-width:768px) {
  .c1 {
    margin: 0 0 8px 0;
  }
}

@media screen and (min-width:768px) {
  .c3 {
    padding: 0;
  }
}

@media screen and (max-width:376px) {
  .c6 {
    overflow-x: scroll;
  }
}

<article
  className="c0"
  data-id="component"
>
  <header
    className="styleguide-component__header"
  >
    <h1
      className="c1"
    >
      Component
    </h1>
    <div
      className="c2"
    >
      description of component
    </div>
  </header>
  <div
    className="c3"
  >
    <div
      className="c4"
    >
      <span
        className="c5"
        onClick={[Function]}
        role="button"
      >
        PROPERTIES
      </span>
    </div>
    <div
      className="c6 styleguide-component__props-data"
    >
      <table>
        <thead>
          <tr>
            <th>
              PropType
            </th>
            <th>
              Type
            </th>
            <th>
              Default
            </th>
            <th>
              Description
            </th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              <code>
                name
              </code>
            </td>
            <td>
              <code>
                string
              </code>
            </td>
            <td>
              <code>
                Required
              </code>
            </td>
            <td>
              Lorem ipsum dolor sit amet, consectetur adipisicing elit. Illo, nemo!
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</article>
`;

exports[`Component generic tests: When component has only props 1`] = `
.c0 {
  padding-top: 32px;
}

.c1 {
  margin: 0 16px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c2 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c3 {
  font-size: 14px;
  font-family: sans-serif;
  padding: 0 16px;
}

.c3 table {
  width: 100%;
  border-collapse: collapse;
  border-radius: 4px;
  text-align: left;
}

.c3 thead tr {
  border-bottom: 1px solid #7000e3;
}

.c3 thead th {
  padding: 0 16px 8px 4px;
}

.c3 tbody tr:nth-child(2n) {
  background: #f0f0f0;
}

.c3 tbody tr td:nth-child(2) {
  font-style: italic;
  color: #303030;
}

.c3 tbody tr td:nth-child(1) {
  font-weight: 600;
}

.c3 tbody tr td:nth-child(4) {
  width: 45%;
}

.c3 td {
  padding: 8px 16px 8px 4px;
}

.c4 + .styleguide-component__props-data {
  margin-top: 16px;
}

.c5 {
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: sans-serif;
}

.c5::before {
  margin-right: 4px;
  display: block;
  background: #7000e3;
  color: #fff;
  width: 14px;
  height: 14px;
  line-height: 12px;
  text-align: center;
}

.c5::before {
  content: '+';
}

@media screen and (max-width:376px) {
  .c0 {
    padding-top: 16px;
  }
}

@media screen and (min-width:768px) {
  .c1 {
    margin: 0 0 8px 0;
  }
}

@media screen and (min-width:768px) {
  .c3 {
    padding: 0;
  }
}

<article
  className="c0"
  data-id="component"
>
  <header
    className="styleguide-component__header"
  >
    <h1
      className="c1"
    >
      Component
    </h1>
    <div
      className="c2"
    >
      description of component
    </div>
  </header>
  <div
    className="c3"
  >
    <div
      className="c4"
    >
      <span
        className="c5"
        onClick={[Function]}
        role="button"
      >
        PROPERTIES
      </span>
    </div>
  </div>
</article>
`;

exports[`Component generic tests: When component has only tests 1`] = `
.c11 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 16px;
  height: 16px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c11 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c5 {
  display: block;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  background: #f0f0f0;
  border-radius: 4px 4px 0 0;
  color: #000;
  padding: 0 16px;
}

.styleguide-sandbox .c6:only-child {
  border-radius: 4px;
}

.c8 {
  margin: 0;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  font-size: 16px;
  font-weight: 300;
  font-family: sans-serif;
  padding: 16px 0;
  word-break: break-word;
}

.c9 {
  margin-left: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #202020;
  opacity: 0.5;
  -webkit-transition: opacity 0.1s ease;
  transition: opacity 0.1s ease;
  padding: 0 8px;
}

.c10:hover {
  opacity: 1;
}

.c12 {
  position: relative;
  padding: 20px;
  border: 1px solid #f0f0f0;
  border-top: 0;
  box-shadow: 0 -1px 0 0 #f0f0f0;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
}

.c0 {
  padding-top: 32px;
}

.c1 {
  margin: 0 16px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c2 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c3 {
  margin-top: 16px;
}

.c4 + .c4 {
  margin-top: 32px;
}

@media screen and (max-width:376px) {
  .c8 {
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: initial;
  }
}

@media screen and (max-width:376px) {
  .c0 {
    padding-top: 16px;
  }
}

@media screen and (min-width:768px) {
  .c1 {
    margin: 0 0 8px 0;
  }
}

<article
  className="c0"
  data-id="component"
>
  <header
    className="styleguide-component__header"
  >
    <h1
      className="c1"
    >
      Component
    </h1>
    <div
      className="c2"
    >
      description of component
    </div>
  </header>
  <div
    className="c3"
  >
    <div
      className="c4 "
    >
      <section
        className="c5"
        data-name="SpecComponentEmpty"
        data-vrt-locator="sandbox"
      >
        <header
          className="c6 c7"
        >
          <h1
            className="c8"
            onClick={[Function]}
            title="SpecComponentEmpty"
          >
            SpecComponentEmpty
          </h1>
          <div
            className="c9"
          >
            <span
              className="c10"
              onClick={[Function]}
            >
              <div
                className="c11"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                  />
                </svg>
              </div>
            </span>
            <span
              className="c10"
              onClick={[Function]}
            >
              <div
                className="c11"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                  />
                </svg>
              </div>
            </span>
          </div>
        </header>
        <div
          data-vrt-locator="sandbox-content"
        >
          <div
            className="c12"
          >
            <article
              className="c0"
            >
              <header
                className="styleguide-component__header"
              >
                <h1
                  className="c1"
                />
                <div
                  className="c2"
                />
              </header>
            </article>
          </div>
        </div>
      </section>
    </div>
    <div
      className="c4 "
    >
      <section
        className="c5"
        data-name="SpecComponentPropTypes"
        data-vrt-locator="sandbox"
      >
        <header
          className="c6 c7"
        >
          <h1
            className="c8"
            onClick={[Function]}
            title="SpecComponentPropTypes"
          >
            SpecComponentPropTypes
          </h1>
          <div
            className="c9"
          >
            <span
              className="c10"
              onClick={[Function]}
            >
              <div
                className="c11"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                  />
                </svg>
              </div>
            </span>
            <span
              className="c10"
              onClick={[Function]}
            >
              <div
                className="c11"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                  />
                </svg>
              </div>
            </span>
          </div>
        </header>
        <div
          data-vrt-locator="sandbox-content"
        >
          <div
            className="c12"
          >
            <article
              className="c0"
            >
              <header
                className="styleguide-component__header"
              >
                <h1
                  className="c1"
                />
                <div
                  className="c2"
                />
              </header>
            </article>
          </div>
        </div>
      </section>
    </div>
    <div
      className="c4 "
    >
      <section
        className="c5"
        data-name="SpecComponentFull"
        data-vrt-locator="sandbox"
      >
        <header
          className="c6 c7"
        >
          <h1
            className="c8"
            onClick={[Function]}
            title="SpecComponentFull"
          >
            SpecComponentFull
          </h1>
          <div
            className="c9"
          >
            <span
              className="c10"
              onClick={[Function]}
            >
              <div
                className="c11"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                  />
                </svg>
              </div>
            </span>
            <span
              className="c10"
              onClick={[Function]}
            >
              <div
                className="c11"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                  />
                </svg>
              </div>
            </span>
          </div>
        </header>
        <div
          data-vrt-locator="sandbox-content"
        >
          <div
            className="c12"
          >
            <article
              className="c0"
            >
              <header
                className="styleguide-component__header"
              >
                <h1
                  className="c1"
                />
                <div
                  className="c2"
                />
              </header>
            </article>
          </div>
        </div>
      </section>
    </div>
  </div>
</article>
`;

exports[`Component generic tests: When component has props & tests 1`] = `
.c14 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 16px;
  height: 16px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c14 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c8 {
  display: block;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  background: #f0f0f0;
  border-radius: 4px 4px 0 0;
  color: #000;
  padding: 0 16px;
}

.styleguide-sandbox .c9:only-child {
  border-radius: 4px;
}

.c11 {
  margin: 0;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  font-size: 16px;
  font-weight: 300;
  font-family: sans-serif;
  padding: 16px 0;
  word-break: break-word;
}

.c12 {
  margin-left: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #202020;
  opacity: 0.5;
  -webkit-transition: opacity 0.1s ease;
  transition: opacity 0.1s ease;
  padding: 0 8px;
}

.c13:hover {
  opacity: 1;
}

.c15 {
  position: relative;
  padding: 20px;
  border: 1px solid #f0f0f0;
  border-top: 0;
  box-shadow: 0 -1px 0 0 #f0f0f0;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
}

.c0 {
  padding-top: 32px;
}

.c1 {
  margin: 0 16px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c2 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c6 {
  margin-top: 16px;
}

.c3 {
  font-size: 14px;
  font-family: sans-serif;
  padding: 0 16px;
}

.c3 table {
  width: 100%;
  border-collapse: collapse;
  border-radius: 4px;
  text-align: left;
}

.c3 thead tr {
  border-bottom: 1px solid #7000e3;
}

.c3 thead th {
  padding: 0 16px 8px 4px;
}

.c3 tbody tr:nth-child(2n) {
  background: #f0f0f0;
}

.c3 tbody tr td:nth-child(2) {
  font-style: italic;
  color: #303030;
}

.c3 tbody tr td:nth-child(1) {
  font-weight: 600;
}

.c3 tbody tr td:nth-child(4) {
  width: 45%;
}

.c3 td {
  padding: 8px 16px 8px 4px;
}

.c4 + .styleguide-component__props-data {
  margin-top: 16px;
}

.c5 {
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  font-family: sans-serif;
}

.c5::before {
  margin-right: 4px;
  display: block;
  background: #7000e3;
  color: #fff;
  width: 14px;
  height: 14px;
  line-height: 12px;
  text-align: center;
}

.c5::before {
  content: '+';
}

.c7 + .c7 {
  margin-top: 32px;
}

@media screen and (max-width:376px) {
  .c11 {
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: initial;
  }
}

@media screen and (max-width:376px) {
  .c0 {
    padding-top: 16px;
  }
}

@media screen and (min-width:768px) {
  .c1 {
    margin: 0 0 8px 0;
  }
}

@media screen and (min-width:768px) {
  .c3 {
    padding: 0;
  }
}

<article
  className="c0"
  data-id="component"
>
  <header
    className="styleguide-component__header"
  >
    <h1
      className="c1"
    >
      Component
    </h1>
    <div
      className="c2"
    >
      description of component
    </div>
  </header>
  <div
    className="c3"
  >
    <div
      className="c4"
    >
      <span
        className="c5"
        onClick={[Function]}
        role="button"
      >
        PROPERTIES
      </span>
    </div>
  </div>
  <div
    className="c6"
  >
    <div
      className="c7 "
    >
      <section
        className="c8"
        data-name="SpecComponentEmpty"
        data-vrt-locator="sandbox"
      >
        <header
          className="c9 c10"
        >
          <h1
            className="c11"
            onClick={[Function]}
            title="SpecComponentEmpty"
          >
            SpecComponentEmpty
          </h1>
          <div
            className="c12"
          >
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                  />
                </svg>
              </div>
            </span>
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                  />
                </svg>
              </div>
            </span>
          </div>
        </header>
        <div
          data-vrt-locator="sandbox-content"
        >
          <div
            className="c15"
          >
            <article
              className="c0"
            >
              <header
                className="styleguide-component__header"
              >
                <h1
                  className="c1"
                />
                <div
                  className="c2"
                />
              </header>
            </article>
          </div>
        </div>
      </section>
    </div>
    <div
      className="c7 "
    >
      <section
        className="c8"
        data-name="SpecComponentPropTypes"
        data-vrt-locator="sandbox"
      >
        <header
          className="c9 c10"
        >
          <h1
            className="c11"
            onClick={[Function]}
            title="SpecComponentPropTypes"
          >
            SpecComponentPropTypes
          </h1>
          <div
            className="c12"
          >
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                  />
                </svg>
              </div>
            </span>
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                  />
                </svg>
              </div>
            </span>
          </div>
        </header>
        <div
          data-vrt-locator="sandbox-content"
        >
          <div
            className="c15"
          >
            <article
              className="c0"
            >
              <header
                className="styleguide-component__header"
              >
                <h1
                  className="c1"
                />
                <div
                  className="c2"
                />
              </header>
            </article>
          </div>
        </div>
      </section>
    </div>
    <div
      className="c7 "
    >
      <section
        className="c8"
        data-name="SpecComponentFull"
        data-vrt-locator="sandbox"
      >
        <header
          className="c9 c10"
        >
          <h1
            className="c11"
            onClick={[Function]}
            title="SpecComponentFull"
          >
            SpecComponentFull
          </h1>
          <div
            className="c12"
          >
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                  />
                </svg>
              </div>
            </span>
            <span
              className="c13"
              onClick={[Function]}
            >
              <div
                className="c14"
                role="presentation"
              >
                <svg
                  height="16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                  />
                </svg>
              </div>
            </span>
          </div>
        </header>
        <div
          data-vrt-locator="sandbox-content"
        >
          <div
            className="c15"
          >
            <article
              className="c0"
            >
              <header
                className="styleguide-component__header"
              >
                <h1
                  className="c1"
                />
                <div
                  className="c2"
                />
              </header>
            </article>
          </div>
        </div>
      </section>
    </div>
  </div>
</article>
`;
